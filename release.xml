<?xml version="1.0"?>
<project name="nant" default="build-release">
    <property name="sf.net.ssh.server" value="shell1.sf.net"/>
    <property name="sf.net.web.path" value="/home/groups/n/na/nant/htdocs"/>
    <!-- retrieve system information and environment variables -->
    <sysinfo />
    <!-- setup property that holds partial path to be used by scp -->
    <property name="serverpart" value="${sys.env.USERNAME}@${sf.net.ssh.server}:${sf.net.web.path}" />
    <!-- include master build file -->
    <include buildfile="nant.build"/>
    <!-- perform a 'release' package and upload to sf.net -->
    <target name="build-release" depends="set-net-1.0-framework-configuration, release, package, deploy-sf" description="Perform a 'release' package and uploads to sf.net" />
    <!-- deploy content to sourceforge -->
    <target name="deploy-sf" depends="deploy-schema-sf, deploy-help-sf, deploy-web-sf" />
    <!-- copy schema to sourceforge -->
    <target name="deploy-schema-sf" depends="set-net-1.0-framework-configuration, release, package">
        <!-- make sure the directory tree exists -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="mkdir --mode=775 --parents ${sf.net.web.path}/schema" />
        </exec>
        <!-- copy schema file to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/schema" program="scp">
            <arg value="-C" />
            <arg value="${project.name}-${project.version}.xsd" />
            <arg value="${serverpart}/schema" />
        </exec>
        <echo message="Copied schema over to SF.Net" />
        <!-- make sure permissions are set right -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="chmod 775 ${sf.net.web.path}/schema/${project.name}-${project.version}.xsd" />
        </exec>
        <!-- make sure group is set right -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="chgrp nant ${sf.net.web.path}/schema/${project.name}-${project.version}.xsd" />
        </exec>
    </target>
    <!-- copy help to sourceforge -->
    <target name="deploy-help-sf" depends="set-net-1.0-framework-configuration, release, package">
        <!-- make sure the directory tree exists -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="mkdir --mode=775 --parents ${sf.net.web.path}/help" />
        </exec>
        <!-- try to remove existing files and directories -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="rm -R --force ${sf.net.web.path}/help/*" />
        </exec>
        <!-- copy help to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc/help" program="scp">
            <arg value="-r" />
            <arg value="-C" />
            <arg value="*" />
            <arg value="${serverpart}/help" />
        </exec>
        <echo message="Copied docs over to SF.Net" />
        <!-- make sure permissions are set right -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="chmod -R 775 ${sf.net.web.path}/help" />
        </exec>
        <!-- make sure group is set right -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="chgrp -R nant ${sf.net.web.path}/help" />
        </exec>
    </target>
    <!-- copy website to sourceforge -->
    <target name="deploy-web-sf" depends="set-net-1.0-framework-configuration, release, package">
        <!-- make sure the directory tree exists -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="mkdir --mode=775 --parents ${sf.net.web.path}" />
        </exec>
        <!-- try to remove existing files -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="find ${sf.net.web.path} -maxdepth 1 -type f -exec rm --force {} \;" />
        </exec>
        <!-- copy html files for website to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="*.html" />
            <arg value="${serverpart}" />
        </exec>
        <!-- copy images for website to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="*.gif" />
            <arg value="${serverpart}" />
        </exec>
        <!-- copy stylesheet for website to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="style.css" />
            <arg value="${serverpart}" />
        </exec>
        <!-- copy logo's for website to sourceforge (using compression) -->
        <exec workingdir="${build.dir}/doc" program="scp">
            <arg value="-C" />
            <arg value="logo.*" />
            <arg value="${serverpart}" />
        </exec>
        <echo message="Copied website over to SF.Net" />
        <!-- make sure permissions are set right -->
        <exec program="ssh" failonerror="false">
            <arg value="${sf.net.ssh.server}" />
            <arg value="find ${sf.net.web.path} -maxdepth 1 -type f -exec chmod 775 {} \;" />
        </exec>
        <!-- make sure group is set right -->
        <exec program="ssh">
            <arg value="${sf.net.ssh.server}" />
            <arg value="find ${sf.net.web.path} -maxdepth 1 -type f -exec chgrp nant {} \;" />
        </exec>
    </target>
    
    
    <!-- Temporary directories for building the rpm...there might be a better way to do this. -->
    <property name="rpm.base" value="c:/temp/NAnt/rpm"/>
    <property name="rpm.working" value="c:/temp/NAnt/working"/>
    <property name="cygwin.rpm.base" value="/cygdrive/c/temp/NAnt/rpm"/>
    <property name="cygwin.rpm.working" value="/cygdrive/c/temp/NAnt/working"/>
    
    <target name="setup-rpm" description="Sets up the environment for building rpms.">
        <mkdir dir="${rpm.base}"/>
        <mkdir dir="${rpm.base}/BUILD"/>
        <mkdir dir="${rpm.base}/RPMS"/>
        <mkdir dir="${rpm.base}/i386"/>
        <mkdir dir="${rpm.base}/i686"/>
        <mkdir dir="${rpm.base}/noarch"/>
        <mkdir dir="${rpm.base}/SOURCES"/>
        <mkdir dir="${rpm.base}/SPECS"/>
        <mkdir dir="${rpm.base}/SRPMS"/>
        <mkdir dir="${rpm.working}/tmp"/>
        
        <mkdir dir="${rpm.working}/tmp/NAnt-src"/>
        <mkdir dir="${rpm.working}/tmp/NAnt-tar"/>
        
    </target>    

    <target name="prepare-rpm" description="Prepare the binaries for packaging.">
        <copy todir="${rpm.working}/tmp/NAnt-src">
            <fileset basedir="${build.dir}">
                <include name="bin/**"/>
                <!--include name="doc/**"/-->
                <!--include name="examples/**"/-->
            </fileset>
        </copy>    

        <exec program="bash" verbose="true">
            <arg value="-c"/>
            <arg value="'tar -cvzf ${cygwin.rpm.working}/tmp/NAnt-tar/NAnt.tar.gz -C${cygwin.rpm.working}/tmp/NAnt-src bin'"/>
        </exec>
        
        <copy file="${rpm.working}/tmp/NAnt-tar/NAnt.tar.gz" tofile="${rpm.base}/SOURCES/NAnt.tar.gz" overwrite="true"/>
        <copy file="${build.dir}/NAnt.spec" tofile="${rpm.base}/SPECS/NAnt.spec" overwrite="true"/>
    </target>
    
    <target name="binary-rpm" depends="setup-rpm, prepare-rpm" description="Build the binary rpm for NAnt.">
        <exec program="bash">
            <arg value="--debug -c"/>
            <arg value="&quot;rpmbuild -ba --buildroot=${cygwin.rpm.working} ${cygwin.rpm.base}/SPECS/NAnt.spec&quot;"/>
        </exec>
        
        <copy file="${rpm.base}/RPMS/i386/NAnt-*" tofile="NAnt-0.85-1.rpm"/>
    </target>
</project>
